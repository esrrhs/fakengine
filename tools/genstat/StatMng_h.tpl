/* This file is generated by genstat. */
/* No manual modification is permitted. */

#pragma once

{{range .}}  
// {{iconv .Comment}}
class C{{.Name}}Mgr : public Singleton<C{{.Name}}Mgr>
{
public:
    C{{.Name}}Mgr();
    ~C{{.Name}}Mgr();
    
// 操作函数
public:
    int PrintLog(const char * strStatDir);
    
// 属性操作函数
public:
    {{range .Members}}
    // Get {{iconv .Comment}}
    uint32_t & Get{{.Name}}()
    {
        return m_{{.Name}};
    }
    
    // Set {{iconv .Comment}}
    void Set{{.Name}}(uint32_t _{{.Name}})
    {
        m_{{.Name}} = _{{.Name}};
    }
    
    // Add {{iconv .Comment}}
    void Add{{.Name}}(uint32_t _{{.Name}} = 1)
    {
        m_{{.Name}} += _{{.Name}};
    }
    {{end}}
    
    {{range .Arrays}}     
	// Set {{iconv .Comment}}
    void Set{{.Name}}(uint32_t index, uint32_t _{{.Name}})
    {
		if (index >= {{.Length}})
        {
            return;
        }
        m_{{.Name}}[index] += _{{.Name}};
    }
	
    // Add {{iconv .Comment}}
    void Add{{.Name}}(uint32_t index, uint32_t _{{.Name}} = 1)
    {
        if (index >= {{.Length}})
        {
            return;
        }
        m_{{.Name}}[index] += _{{.Name}};
    }
    {{end}}
	
    {{range .TopArrays}}      
	// Set {{iconv .Comment}}
    void Set{{.Name}}(uint32_t index, uint32_t _{{.Name}})
    {
		if (index >= {{.Length}})
        {
            return;
        }
        m_{{.Name}}[index] += _{{.Name}};
    }
	       
    // Add {{iconv .Comment}}
    void Add{{.Name}}(uint32_t index, uint32_t _{{.Name}} = 1)
    {
        if (index >= {{.Length}})
        {
            return;
        }
        m_{{.Name}}[index] += _{{.Name}};
    }
    {{end}}
	
    {{range .HashMaps}}     
	// Set {{iconv .Comment}}
    void Set{{.Name}}(uint32_t index, uint32_t _{{.Name}})
    {
		CHashMap<{{.Length}}, uint32_t, uint32_t>::iterator it = m_{{.Name}}.find(index);
        if (it == m_{{.Name}}.end())
        {
            m_{{.Name}}.insert(index, _{{.Name}});
        }
        else
        {
            uint32_t & val = it->second;
            val = _{{.Name}};
        }
    }
	        
    // Add {{iconv .Comment}}
    void Add{{.Name}}(uint32_t index, uint32_t _{{.Name}} = 1)
    {
        CHashMap<{{.Length}}, uint32_t, uint32_t>::iterator it = m_{{.Name}}.find(index);
        if (it == m_{{.Name}}.end())
        {
            m_{{.Name}}.insert(index, _{{.Name}});
        }
        else
        {
            uint32_t & val = it->second;
            val += _{{.Name}};
        }
    }
    {{end}}
    
// 内部函数
private:
    void Clear();

// 属性
private:
    {{range .Members}}
    // {{iconv .Comment}}
    uint32_t m_{{.Name}};
    {{end}}
    {{range .Arrays}}
    // {{iconv .Comment}}
    uint32_t m_{{.Name}}[{{.Length}}];
    {{end}}
    {{range .TopArrays}}
    // {{iconv .Comment}}
    uint32_t m_{{.Name}}[{{.Length}}];
    {{end}}    
    {{range .HashMaps}}
    // {{iconv .Comment}}
    CHashMap<{{.Length}}, uint32_t, uint32_t> m_{{.Name}};
    {{end}}    
};
{{end}}
