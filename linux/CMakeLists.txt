CMAKE_MINIMUM_REQUIRED(VERSION 2.8)
PROJECT(FENGINE)
AUX_SOURCE_DIRECTORY(../fuck_game_server_engine SRC_LIST)
AUX_SOURCE_DIRECTORY(../fuck_game_server_engine/lua SRC_LIST)
AUX_SOURCE_DIRECTORY(../fuck_game_server_engine/zlib SRC_LIST)
AUX_SOURCE_DIRECTORY(../fuck_game_server_engine/lzo SRC_LIST)
AUX_SOURCE_DIRECTORY(../fuck_game_server_engine/expat SRC_LIST)
MESSAGE(STATUS "This is BINARY dir " ${FENGINE_BINARY_DIR})
MESSAGE(STATUS "This is SOURCE dir " ${FENGINE_SOURCE_DIR})
MESSAGE(STATUS "This is SOURCE file " ${SRC_LIST})
SET(CMAKE_CXX_FLAGS "-g -O0 -Wall")
ADD_DEFINITIONS(-DHAVE_EXPAT_CONFIG_H)
ADD_LIBRARY(fengine STATIC ${SRC_LIST})
LINK_DIRECTORIES(${FENGINE_SOURCE_DIR}/../lib/)
if(CMAKE_SIZEOF_VOID_P EQUAL 8)
TARGET_LINK_LIBRARIES(fengine pthread mysqlclient-64 dl)
else()
TARGET_LINK_LIBRARIES(fengine pthread mysqlclient dl)
endif()

PROJECT(TEST)
AUX_SOURCE_DIRECTORY(../test TEST_SRC_LIST)
INCLUDE_DIRECTORIES(../fuck_game_server_engine)
MESSAGE(STATUS "This is test BINARY dir " ${TEST_BINARY_DIR})
MESSAGE(STATUS "This is test SOURCE dir " ${TEST_SOURCE_DIR})
MESSAGE(STATUS "This is test SOURCE file " ${TEST_SRC_LIST})
SET(CMAKE_CXX_FLAGS "-g -O0 -Wall")
ADD_EXECUTABLE(test ${TEST_SRC_LIST})
TARGET_LINK_LIBRARIES(test fengine)
